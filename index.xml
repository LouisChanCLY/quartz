<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>🪴 Louis Chan's Garden on</title><link>https://louischancly.github.io/quartz/</link><description>Recent content in 🪴 Louis Chan's Garden on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://louischancly.github.io/quartz/index.xml" rel="self" type="application/rss+xml"/><item><title>Setup</title><link>https://louischancly.github.io/quartz/notes/setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/notes/setup/</guid><description>Making your own Quartz Setting up Quartz requires a basic understanding of git. If you are unfamiliar, this resource is a great place to start!</description></item><item><title>Editing Content in Quartz</title><link>https://louischancly.github.io/quartz/notes/editing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/notes/editing/</guid><description>Editing Quartz runs on top of Hugo so all notes are written in Markdown.
Folder Structure Here&amp;rsquo;s a rough overview of what&amp;rsquo;s what.</description></item><item><title>Obsidian Vault Integration</title><link>https://louischancly.github.io/quartz/notes/obsidian/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/notes/obsidian/</guid><description>Setup Obsidian is the preferred way to use Quartz. You can either create a new Obsidian Vault or link one that your already have.</description></item><item><title>Preview Changes</title><link>https://louischancly.github.io/quartz/notes/preview-changes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/notes/preview-changes/</guid><description>If you&amp;rsquo;d like to preview what your Quartz site looks like before deploying it to the internet, here&amp;rsquo;s exactly how to do that!</description></item><item><title>Deploying Quartz to the Web</title><link>https://louischancly.github.io/quartz/notes/hosting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/notes/hosting/</guid><description>Hosting on GitHub Pages Quartz is designed to be effortless to deploy. If you forked and cloned Quartz directly from the repository, everything should already be good to go!</description></item><item><title/><link>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/Stein-Variational-Gradient-Descent/</link><pubDate>Mon, 25 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/Stein-Variational-Gradient-Descent/</guid><description>Metadata Association: Domain: [[Domain Root - Data Science]] Stein Variational Gradient Descent [[Neural Variational Gradient Descent]] [[Bayesian Inference]] beyond VI and MCMC</description></item><item><title/><link>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/Python-Trick-How-to-call-function-by-its-name/</link><pubDate>Sun, 24 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/Python-Trick-How-to-call-function-by-its-name/</guid><description>Metadata Association: Domain: [[Domain Root - Python]] Python Trick How to call function by its name Welcome to a series of short posts each with handy Python tricks that can help you up your game.</description></item><item><title/><link>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/Brents-Method/</link><pubDate>Fri, 22 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/Brents-Method/</guid><description>Metadata Association: [[Root Searching Algorithms]] Domain: [[Domain Root - Data Science]] Brent&amp;rsquo;s Method</description></item><item><title/><link>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/Inverse-Quadratic-Interpolation/</link><pubDate>Fri, 22 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/Inverse-Quadratic-Interpolation/</guid><description>Metadata Association: [[Root Searching Algorithms]] Domain: [[Domain Root - Data Science]] Inverse Quadratic Interpolation</description></item><item><title/><link>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/Newton-Raphsons-Method/</link><pubDate>Fri, 22 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/Newton-Raphsons-Method/</guid><description>Metadata Association: [[Root Searching Algorithms]] Domain: [[Domain Root - Data Science]] Newton-Raphson&amp;rsquo;s Method</description></item><item><title/><link>https://louischancly.github.io/quartz/-resources/Wiki/Bisection-Algorithm/</link><pubDate>Thu, 21 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/-resources/Wiki/Bisection-Algorithm/</guid><description>Metadata Association: [[Binary Search Trees]] [[Binary Search]] [[Root Searching Algorithms]] Domain: [[Domain Root - Data Science]] Bisection Algorithm Bisection algorithm, or more famously known for its discrete version ([[Binary Search]]) or tree variant ([[Binary Search Tree]]), is an efficient algorithm for searching for a target value within a bound.</description></item><item><title/><link>https://louischancly.github.io/quartz/-resources/Wiki/Cardinality/</link><pubDate>Thu, 21 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/-resources/Wiki/Cardinality/</guid><description>Metadata Association: [[Set Theory]], [[Power Set]] Domain: [[Domain Root - Mathematics]] Denoted by an absolute-value symbol, cardinality of a set is the number of unique elements contained within it.</description></item><item><title/><link>https://louischancly.github.io/quartz/-resources/Wiki/Empty-Set/</link><pubDate>Thu, 21 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/-resources/Wiki/Empty-Set/</guid><description>Metadata Association: [[Set Theory]], [[Universal Set]] Domain: [[Domain Root - Mathematics]] Empty Set There is only one empty set or null set - the empty set - $\varnothing$.</description></item><item><title/><link>https://louischancly.github.io/quartz/-resources/Wiki/Modified-Regula-Falsi/</link><pubDate>Thu, 21 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/-resources/Wiki/Modified-Regula-Falsi/</guid><description>Metadata Association: [[Regula Falsi]] [[Root Searching Algorithms]] Domain: [[Domain Root - Data Science]] Modified Regula-Falsi In order to get pass the [[Stagnant Bound]], we can add in a conditional rule for when a bound remain stagnant for two rounds.</description></item><item><title/><link>https://louischancly.github.io/quartz/-resources/Wiki/Power-Set/</link><pubDate>Thu, 21 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/-resources/Wiki/Power-Set/</guid><description>Metadata Association: [[Set Theory]], [[Cardinality]] Domain: [[Domain Root - Mathematics]] Power Set Power set of set $C$, $S(C)$ is the set of all subsets of $C$, including the empty set $\varnothing$ and the set $C$ itself.</description></item><item><title/><link>https://louischancly.github.io/quartz/-resources/Wiki/Quasi-Newtons-Method/</link><pubDate>Thu, 21 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/-resources/Wiki/Quasi-Newtons-Method/</guid><description>Metadata Association: [[Root Searching Algorithms]] Domain: [[Domain Root - Data Science]] Quasi-Newton’s Method What if we do not know where the brackets are?</description></item><item><title/><link>https://louischancly.github.io/quartz/-resources/Wiki/Regula-Falsi/</link><pubDate>Thu, 21 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/-resources/Wiki/Regula-Falsi/</guid><description>Metadata Association: [[Root Searching Algorithms]] Domain: [[Domain Root - Data Science]] Regula Falsi Just like [[Bisection Algorithm]], Regula Falsi also uses a bracketing approach.</description></item><item><title/><link>https://louischancly.github.io/quartz/-resources/Wiki/Relative-Complement-vs-Complement/</link><pubDate>Thu, 21 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/-resources/Wiki/Relative-Complement-vs-Complement/</guid><description>Metadata Association: [[Set Theory]], [[Universal Set]] Domain: [[Domain Root - Mathematics]] Relative Complement Relative complement is a common operation in [[Set Theory]] where $A - B$ is defined as any element in $A$ that is not in $B$ (i.</description></item><item><title/><link>https://louischancly.github.io/quartz/-resources/Wiki/Steffensens-Method/</link><pubDate>Thu, 21 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/-resources/Wiki/Steffensens-Method/</guid><description>Metadata Association: [[Regula Falsi]] [[Root Searching Algorithms]] Domain: [[Domain Root - Data Science]] Steffensen’s Method [[Quasi-Newton’s Method]] further improves the [[Regula Falsi]] algorithm by removing the requirement of a bracket which contains a root.</description></item><item><title/><link>https://louischancly.github.io/quartz/-resources/Wiki/Universal-Set/</link><pubDate>Thu, 21 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/-resources/Wiki/Universal-Set/</guid><description>Metadata Association: [[Set Theory]], [[Empty Set]] Domain: [[Domain Root - Mathematics]] Universal Set For a fixed class of objects, there is a universal set $U$ which is the grand-set that contains all the elements for that particular problem space.</description></item><item><title/><link>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/Bijective-Function/</link><pubDate>Thu, 21 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/Bijective-Function/</guid><description>Metadata Association: [[Set Theory]] [[Injective Function]] [[Surjective Function]] Domain: [[Domain Root - Mathematics]] Bijective Function</description></item><item><title/><link>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/How-to-Buy-a-Home-in-the-UK/</link><pubDate>Thu, 21 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/How-to-Buy-a-Home-in-the-UK/</guid><description/></item><item><title/><link>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/How-to-get-Citizenship-in-UK/</link><pubDate>Thu, 21 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/How-to-get-Citizenship-in-UK/</guid><description/></item><item><title/><link>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/How-to-Get-ILR-in-UK/</link><pubDate>Thu, 21 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/How-to-Get-ILR-in-UK/</guid><description/></item><item><title/><link>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/How-to-Learn-Driving-in-UK/</link><pubDate>Thu, 21 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/How-to-Learn-Driving-in-UK/</guid><description/></item><item><title/><link>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/How-to-Set-up-a-Company-in-UK/</link><pubDate>Thu, 21 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/How-to-Set-up-a-Company-in-UK/</guid><description/></item><item><title/><link>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/Injective-Function/</link><pubDate>Thu, 21 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/Injective-Function/</guid><description>Metadata Association: [[Set Theory]] [[Bijective Function]] [[Surjective Function]] Domain: [[Domain Root - Mathematics]] Injective Function</description></item><item><title/><link>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/Root-Searching-Algorithms/</link><pubDate>Thu, 21 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/Root-Searching-Algorithms/</guid><description>Metadata Association: Domain: [[Domain Root - Data Science]] Root Searching Algorithms 1 2 TABLE approach, convergence, knowledge_of_root, n_initial_seeds, slow_convergence_risk, method_of_problem_space_reduction, convergence_speed WHERE tag=&amp;#34;root-searching&amp;#34;</description></item><item><title/><link>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/Surjective-Function/</link><pubDate>Thu, 21 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/Surjective-Function/</guid><description>Metadata Association: [[Set Theory]] [[Injective Function]] [[Bijective Function]] Domain: [[Domain Root - Mathematics]] Surjective Function</description></item><item><title/><link>https://louischancly.github.io/quartz/-resources/Reading-and-listening/Articles/SHAP-Values-Explained-Exactly-How-You-Wished-Someone-Explained-to-You/</link><pubDate>Wed, 20 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/-resources/Reading-and-listening/Articles/SHAP-Values-Explained-Exactly-How-You-Wished-Someone-Explained-to-You/</guid><description>SHAP Values Explained Exactly How You Wished Someone Explained to You Metadata Author: [[Samuele Mazzanti]] Full Title: SHAP Values Explained Exactly How You Wished Someone Explained to You Category: #articles URL: https://medium.</description></item><item><title/><link>https://louischancly.github.io/quartz/-resources/Wiki/Maths/Partial-Derivatives/</link><pubDate>Wed, 20 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/-resources/Wiki/Maths/Partial-Derivatives/</guid><description>Metadata Association Domain: [[Domain Root - Mathematics]]</description></item><item><title/><link>https://louischancly.github.io/quartz/-resources/Wiki/Maths/Set-Theory/</link><pubDate>Wed, 20 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/-resources/Wiki/Maths/Set-Theory/</guid><description>Metadata Association: Domain: [[Domain Root - Mathematics]] Common Operations Union: $A \cup B$ Intersection: $A \cap B$ Subset: $A \in B$ Proper Subset: $A \subseteq B$ Relative Complement: $A - B$ Topics 1 2 LIST WHERE tag=&amp;#34;set-theory&amp;#34;</description></item><item><title/><link>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/Articles/Analysing-Interactions-with-SHAP/</link><pubDate>Wed, 20 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/Articles/Analysing-Interactions-with-SHAP/</guid><description>Analysing Interactions with SHAP Metadata Author: [[Samuele Mazzanti]] Full Title: Analysing Interactions with SHAP Category: #articles URL: https://towardsdatascience.com/analysing-interactions-with-shap-8c4a2bc11c2a Association: [[SHAP Values Explained Exactly How You Wished Someone Explained to You]], [[KernelSHAP vs TreeSHAP]] #todo/next-action</description></item><item><title/><link>https://louischancly.github.io/quartz/-resources/Reading-and-listening/Articles/English-Premier-League-EPL-Pythagorean-Predictor/</link><pubDate>Tue, 19 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/-resources/Reading-and-listening/Articles/English-Premier-League-EPL-Pythagorean-Predictor/</guid><description># English Premier League (EPL) Pythagorean Predictor Metadata Author: [[Momin Mehmood Butt]] Full Title: Pythagorean Expectation in Sports Analytics With Examples From Different Sports Category: #articles URL: https://medium.</description></item><item><title/><link>https://louischancly.github.io/quartz/-resources/Reading-and-listening/Articles/Information-Theory-and-Ensemble-Models/</link><pubDate>Tue, 19 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/-resources/Reading-and-listening/Articles/Information-Theory-and-Ensemble-Models/</guid><description>[[Information Theory]] and [[Ensemble Models]] Metadata Author: [[Vedant Bedi]] Full Title: Information Theory and Ensemble Models Category: #articles URL: https://medium.</description></item><item><title/><link>https://louischancly.github.io/quartz/-resources/Reading-and-listening/Articles/Pythagorean-Expectation-in-Sports-Analytics-With-Examples-From-Different-Sports/</link><pubDate>Tue, 19 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/-resources/Reading-and-listening/Articles/Pythagorean-Expectation-in-Sports-Analytics-With-Examples-From-Different-Sports/</guid><description>Pythagorean Expectation in Sports Analytics With Examples From Different Sports Metadata Author: [[Momin Mehmood Butt]] Full Title: Pythagorean Expectation in Sports Analytics With Examples From Different Sports Category: #articles URL: https://medium.</description></item><item><title/><link>https://louischancly.github.io/quartz/-resources/Wiki/Charles-Darwin/</link><pubDate>Tue, 19 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/-resources/Wiki/Charles-Darwin/</guid><description>Metadata Association: [[Theory of Evolution]], [[Genetic Algorithm]] Domain: [[Domain Root - History]]</description></item><item><title/><link>https://louischancly.github.io/quartz/-resources/Wiki/Explainable-AI/DeepSHAP/</link><pubDate>Tue, 19 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/-resources/Wiki/Explainable-AI/DeepSHAP/</guid><description>Metadata Association: [[KernelSHAP vs TreeSHAP]] Domain: [[Domain Root - Data Science]] DeepSHAP</description></item><item><title/><link>https://louischancly.github.io/quartz/-resources/Wiki/Explainable-AI/KernelSHAP/</link><pubDate>Tue, 19 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/-resources/Wiki/Explainable-AI/KernelSHAP/</guid><description>Metadata Association: [[KernelSHAP vs TreeSHAP]] Domain: [[Domain Root - Data Science]] KernelSHAP KernelSHAP is a model agnostic approximation of [[SHAP]].</description></item><item><title/><link>https://louischancly.github.io/quartz/-resources/Wiki/Explainable-AI/SHAP/</link><pubDate>Tue, 19 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/-resources/Wiki/Explainable-AI/SHAP/</guid><description>SHAP Local interpretability of predictive model
Metadata Association: [[KernelSHAP vs TreeSHAP]], [[Explainable AI]], [[SHAP Values Explained Exactly How You Wished Someone Explained to You]] Domain: [[Domain Root - Data Science]] Introduction SHapley Additive exPlanations (SHAP) is an algorithm first published in 2017 by [[Scott Lundberg]] and [[Su-In Lee]] in [[A Unified Approach to Interpreting Model Predictions]] for reverse-engineering the output of any predictive algorithm.</description></item><item><title/><link>https://louischancly.github.io/quartz/-resources/Wiki/Explainable-AI/TreeSHAP/</link><pubDate>Tue, 19 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/-resources/Wiki/Explainable-AI/TreeSHAP/</guid><description>Metadata Association: [[KernelSHAP vs TreeSHAP]] Domain: [[Domain Root - Data Science]] TreeSHAP</description></item><item><title/><link>https://louischancly.github.io/quartz/-resources/Wiki/Genetic-Algorithm/</link><pubDate>Tue, 19 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/-resources/Wiki/Genetic-Algorithm/</guid><description>Metadata Association: Domain: [[Domain Root - Data Science]] Genetic Algorithm Inspired by [[Charles Darwin]]’s [[Theory of Evolution]], the Genetic Algorithm is an iterative process for search the global optimal solution to a problem statement.</description></item><item><title/><link>https://louischancly.github.io/quartz/-resources/Wiki/Neural-Network/Neural-Network-Initialisation/</link><pubDate>Tue, 19 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/-resources/Wiki/Neural-Network/Neural-Network-Initialisation/</guid><description>Metadata Association: Domain: [[Domain Root - Data Science]]
Neural Network Initialisation [[Neural Network]] initialisation is a process of setting initial weights to all the neurons of a neural network.</description></item><item><title/><link>https://louischancly.github.io/quartz/-resources/Wiki/Recommendation-System/Recommendation-System/</link><pubDate>Tue, 19 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/-resources/Wiki/Recommendation-System/Recommendation-System/</guid><description>Metadata Association: Domain: [[Domain Root - Data Science]] Recommendation System Recommendation systems try to rank items according to their relevance with other items, i.</description></item><item><title/><link>https://louischancly.github.io/quartz/-resources/Wiki/Sports-Analytics/Pythagorean-Expectation/</link><pubDate>Tue, 19 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/-resources/Wiki/Sports-Analytics/Pythagorean-Expectation/</guid><description>Metadata Association: [[Pythagorean Expectation in Sports Analytics With Examples From Different Sports]] Domain: [[Domain Root - Data Science]] Pythagorean Expectation Pythagorean Expectation is a formula derived by [[Bill James]] to approximate the win percentage of baseball teams.</description></item><item><title/><link>https://louischancly.github.io/quartz/-resources/Wiki/Unsupervised-Machine-Learning/Approximate-Nearest-Neighbour/</link><pubDate>Tue, 19 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/-resources/Wiki/Unsupervised-Machine-Learning/Approximate-Nearest-Neighbour/</guid><description>Metadata Association: Domain: [[Domain Root - Data Science]] Approximate Nearest Neighbour ANN has three main steps:
Vector transformation: Applying [[Dimension Reduction]] on a higher dimensional dataset.</description></item><item><title/><link>https://louischancly.github.io/quartz/-resources/Wiki/Unsupervised-Machine-Learning/Nearest-Neighbour/</link><pubDate>Tue, 19 Jul 2022 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/-resources/Wiki/Unsupervised-Machine-Learning/Nearest-Neighbour/</guid><description>Metadata Association: Domain: [[Domain Root - Data Science]] Nearest Neighbour Nearest Neighbour (NN) has been one of the most versatile algorithms in the realm of computer science and machine learning.</description></item><item><title/><link>https://louischancly.github.io/quartz/Workbench/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/Workbench/</guid><description>[[KernelSHAP vs TreeSHAP]] [[Matplotlib — Making Data Visualization Interesting]] [[Pythagorean Expectation in Sports Analytics With Examples From Different Sports]] [[What I Learned From Microinvesting]] [[Atomic Habits]]</description></item><item><title/><link>https://louischancly.github.io/quartz/-resources/Logs/AEIOU-log-copy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/-resources/Logs/AEIOU-log-copy/</guid><description>Explanation:
A = Activities. &amp;ldquo;What were you actually doing? Was this a structured or an unstructured activity? Did you have a specific role to play or were you just a participant?</description></item><item><title/><link>https://louischancly.github.io/quartz/-resources/Wiki/Inflation-Model/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/-resources/Wiki/Inflation-Model/</guid><description>Metadata Tag; Association: [[Information Theory and Ensemble Models]] Domain: [[Domain Root - Economics]], [[Domain Root - Algotrading]]
Inflation Model Inflation model is a multivariate model used by econometrician to understand the perceived value of time.</description></item><item><title/><link>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Domain-mastery/Domain-Root-Algotrading/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Domain-mastery/Domain-Root-Algotrading/</guid><description/></item><item><title/><link>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Domain-mastery/Domain-Root-Coffee-Tea/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Domain-mastery/Domain-Root-Coffee-Tea/</guid><description/></item><item><title/><link>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Domain-mastery/Domain-Root-Cooking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Domain-mastery/Domain-Root-Cooking/</guid><description/></item><item><title/><link>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Domain-mastery/Domain-Root-Cryptocurrency/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Domain-mastery/Domain-Root-Cryptocurrency/</guid><description/></item><item><title/><link>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Domain-mastery/Domain-Root-Dart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Domain-mastery/Domain-Root-Dart/</guid><description/></item><item><title/><link>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Domain-mastery/Domain-Root-Data-Science/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Domain-mastery/Domain-Root-Data-Science/</guid><description/></item><item><title/><link>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Domain-mastery/Domain-Root-Economics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Domain-mastery/Domain-Root-Economics/</guid><description/></item><item><title/><link>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Domain-mastery/Domain-Root-Film-Photography/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Domain-mastery/Domain-Root-Film-Photography/</guid><description/></item><item><title/><link>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Domain-mastery/Domain-Root-Go/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Domain-mastery/Domain-Root-Go/</guid><description/></item><item><title/><link>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Domain-mastery/Domain-Root-History/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Domain-mastery/Domain-Root-History/</guid><description/></item><item><title/><link>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Domain-mastery/Domain-Root-Python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Domain-mastery/Domain-Root-Python/</guid><description/></item><item><title/><link>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Domain-mastery/Domain-Root-React-Native/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Domain-mastery/Domain-Root-React-Native/</guid><description/></item><item><title/><link>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/Articles/KernelSHAP-vs-TreeSHAP/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/Articles/KernelSHAP-vs-TreeSHAP/</guid><description>KernelSHAP vs TreeSHAP Metadata Author: [[Conor O&amp;rsquo;Sullivan]] Full Title: [[KernelSHAP]] vs [[TreeSHAP]] Category: #articles URL: https://medium.com/p/e00f3b3a27db GitHub Link: https://github.</description></item><item><title/><link>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/Atomic-Habits/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/Atomic-Habits/</guid><description>Association: [[Atomic Habits]] [[Personal growth]]
Goals are about the results you want to achieve. Systems are about the processes that lead to those results.</description></item><item><title/><link>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/Binary-Search-Trees/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/%EF%B8%8F-areas/Inbox/Binary-Search-Trees/</guid><description/></item><item><title>Callouts</title><link>https://louischancly.github.io/quartz/notes/callouts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/notes/callouts/</guid><description>Callout support Quartz supports the same Admonition-callout syntax as Obsidian.
This includes
12 Distinct callout types (each with several aliases) Collapsable callouts See documentation on supported types and syntax here.</description></item><item><title>CJK + Latex Support (测试)</title><link>https://louischancly.github.io/quartz/notes/CJK-+-Latex-Support-%E6%B5%8B%E8%AF%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/notes/CJK-+-Latex-Support-%E6%B5%8B%E8%AF%95/</guid><description>Chinese, Japanese, Korean Support 几乎在我们意识到之前，我们已经离开了地面。
우리가 그것을 알기도 전에 우리는 땅을 떠났습니다.
私たちがそれを知るほぼ前に、私たちは地面を離れていました。
Latex Block math works with two dollar signs $$.</description></item><item><title>Configuration</title><link>https://louischancly.github.io/quartz/notes/config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/notes/config/</guid><description>Configuration Quartz is designed to be extremely configurable. You can find the bulk of the configuration scattered throughout the repository depending on how in-depth you&amp;rsquo;d like to get.</description></item><item><title>Custom Domain</title><link>https://louischancly.github.io/quartz/notes/custom-Domain/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/notes/custom-Domain/</guid><description>Registrar This step is only applicable if you are using a custom domain! If you are using a &amp;lt;YOUR-USERNAME&amp;gt;.github.io domain, you can skip this step.</description></item><item><title>Ignoring Notes</title><link>https://louischancly.github.io/quartz/notes/ignore-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/notes/ignore-notes/</guid><description>Quartz Ignore Edit ignoreFiles in config.toml to include paths you&amp;rsquo;d like to exclude from being rendered.
1 2 3 4 5 6 .</description></item><item><title>Quartz Philosophy</title><link>https://louischancly.github.io/quartz/notes/philosophy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/notes/philosophy/</guid><description>“[One] who works with the door open gets all kinds of interruptions, but [they] also occasionally gets clues as to what the world is and what might be important.</description></item><item><title>Showcase</title><link>https://louischancly.github.io/quartz/notes/showcase/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/notes/showcase/</guid><description>Want to see what Quartz can do? Here are some cool community gardens :)
Quartz Documentation (this site!) Jacky Zhao&amp;rsquo;s Garden Scaling Synthesis - A hypertext research notebook AWAGMI Intern Notes Shihyu&amp;rsquo;s PKM Chloe&amp;rsquo;s Garden SlRvb&amp;rsquo;s Site Course notes for Information Technology Advanced Theory Brandon Boswell&amp;rsquo;s Garden Siyang&amp;rsquo;s Courtyard If you want to see your own on here, submit a Pull Request adding yourself to this file!</description></item><item><title>Troubleshooting and FAQ</title><link>https://louischancly.github.io/quartz/notes/troubleshooting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/notes/troubleshooting/</guid><description>Still having trouble? Here are a list of common questions and problems people encounter when installing Quartz.
While you&amp;rsquo;re here, join our Discord :)</description></item><item><title>Updating</title><link>https://louischancly.github.io/quartz/notes/updating/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://louischancly.github.io/quartz/notes/updating/</guid><description>Haven&amp;rsquo;t updated Quartz in a while and want all the cool new optimizations? On Unix/Mac systems you can run the following command for a one-line update!</description></item></channel></rss>